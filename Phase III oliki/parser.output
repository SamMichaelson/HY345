Nonterminals useless in grammar

    whilestmt


Terminals unused in grammar

    SIMPLECOMMENT
    COMMENT
    UMINUS


Rules useless in grammar

  116 whilestmt: while L_PARENTHESIS expr R_PARENTHESIS loopstmt


State 101 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt: expr SEMICOLON
    3     | ifstmt
    4     | while
    5     | for
    6     | returnstmt
    7     | break
    8     | continue
    9     | block
   10     | funcdef
   11     | SEMICOLON

   12 break: BREAK SEMICOLON

   13 $@1: ε

   14 continue: CONTINUE $@1 SEMICOLON

   15 stmt_list: stmt stmt_list
   16          | ε

   17 expr: assiginexpr
   18     | expr ADD expr
   19     | expr SUB expr
   20     | expr MULT expr
   21     | expr DIVA expr
   22     | expr MOD expr
   23     | expr GREATER expr
   24     | expr GREATEREQUAL expr
   25     | expr LESS expr
   26     | expr LESSEQUAL expr
   27     | expr EQUALITY expr
   28     | expr NOTEQUAL expr
   29     | expr AND expr
   30     | expr OR expr
   31     | term

   32 term: L_PARENTHESIS expr R_PARENTHESIS
   33     | SUB expr
   34     | NOT expr
   35     | ADDITY lvalue
   36     | lvalue ADDITY
   37     | MULTITY lvalue
   38     | lvalue MULTITY
   39     | primary

   40 $@2: ε

   41 $@3: ε

   42 assiginexpr: lvalue $@2 EQUAL $@3 expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | L_PARENTHESIS funcdef R_PARENTHESIS
   47        | const

   48 lvalue: ID
   49       | LOCAL ID
   50       | DOUBLECOLON ID
   51       | member

   52 member: lvalue DOT ID
   53       | lvalue SQBRACKETOPEN expr SQBRACKETCLOSE
   54       | call DOT ID
   55       | call SQBRACKETOPEN expr SQBRACKETCLOSE

   56 $@4: ε

   57 call: call L_PARENTHESIS $@4 elist R_PARENTHESIS
   58     | lvalue callsuffix

   59 $@5: ε

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS

   61 callsuffix: normcall
   62           | methodcall

   63 $@6: ε

   64 normcall: L_PARENTHESIS $@6 elist R_PARENTHESIS

   65 methodcall: DOUBLEDOT ID L_PARENTHESIS elist R_PARENTHESIS

   66 elist: expr
   67      | expr COMMA elist
   68      | ε

   69 objectdef: SQBRACKETOPEN elist SQBRACKETCLOSE
   70          | SQBRACKETOPEN indexed SQBRACKETCLOSE

   71 indexed: BRACEOPEN expr COLON expr BRACECLOSE COMMA indexed
   72        | BRACEOPEN expr COLON expr BRACECLOSE

   73 $@7: ε

   74 block: BRACEOPEN $@7 stmt_list BRACECLOSE

   75 @8: ε

   76 $@9: ε

   77 $@10: ε

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 block

   79 @11: ε

   80 $@12: ε

   81 $@13: ε

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 idlist R_PARENTHESIS $@13 block
   83        | FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend

   84 const: INT
   85      | REAL
   86      | STRING
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 idlist: ID
   91       | idlist COMMA ID
   92       | ε

   93 $@14: ε

   94 ifprefix: IF $@14 L_PARENTHESIS expr R_PARENTHESIS

   95 elseprefix: ELSE

   96 ifstmt: ifprefix stmt
   97       | ifprefix stmt elseprefix stmt

   98 whilestart: WHILE

   99 whilesecond: L_PARENTHESIS expr R_PARENTHESIS

  100 while: whilestart whilesecond loopstmt

  101 N: ε

  102 M: ε

  103 $@15: ε

  104 forprefix: FOR $@15 L_PARENTHESIS elist SEMICOLON M expr SEMICOLON

  105 for: forprefix N elist R_PARENTHESIS N loopstmt N

  106 loopstart: ε

  107 loopend: ε

  108 loopstmt: loopstart stmt loopend

  109 funcblockstart: ε

  110 funcblockend: ε

  111 $@16: ε

  112 returnstmt: RETURN $@16 SEMICOLON

  113 $@17: ε

  114 $@18: ε

  115 returnstmt: RETURN $@17 expr $@18 SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IF (258) 94
    ELSE (259) 95
    WHILE (260) 98
    FOR (261) 104
    FUNCTION (262) 78 82 83
    RETURN (263) 112 115
    BREAK (264) 12
    CONTINUE (265) 14
    AND (266) 29
    NOT (267) 34
    OR (268) 30
    LOCAL (269) 49
    TRUE (270) 88
    FALSE (271) 89
    NIL (272) 87
    BRACEOPEN (273) 71 72 74
    BRACECLOSE (274) 71 72 74
    SQBRACKETOPEN (275) 53 55 69 70 83
    SQBRACKETCLOSE (276) 53 55 69 70 83
    L_PARENTHESIS (277) 32 46 57 60 64 65 78 82 83 94 99 104
    R_PARENTHESIS (278) 32 46 57 60 64 65 78 82 83 94 99 105
    SEMICOLON (279) 2 11 12 14 104 112 115
    COMMA (280) 67 71 91
    COLON (281) 71 72
    DOUBLECOLON (282) 50
    DOT (283) 52 54
    DOUBLEDOT (284) 65
    EQUAL (285) 42
    ADD (286) 18
    SUB (287) 19 33
    MULT (288) 20
    DIVA (289) 21
    MOD (290) 22
    EQUALITY (291) 27
    NOTEQUAL (292) 28
    ADDITY (293) 35 36
    MULTITY (294) 37 38
    GREATER (295) 23
    LESS (296) 25
    GREATEREQUAL (297) 24
    LESSEQUAL (298) 26
    SIMPLECOMMENT (299)
    COMMENT (300)
    ID <stringValue> (301) 48 49 50 52 54 65 78 83 90 91
    INT <intValue> (302) 84
    REAL <doubleValue> (303) 85
    STRING <stringValue> (304) 86
    UMINUS (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    stmt <stmt_t> (53)
        on left: 2 3 4 5 6 7 8 9 10 11
        on right: 15 96 97 108
    break <stmt_t> (54)
        on left: 12
        on right: 7
    continue <stmt_t> (55)
        on left: 14
        on right: 8
    $@1 (56)
        on left: 13
        on right: 14
    stmt_list <stmt_t> (57)
        on left: 15 16
        on right: 1 15 74
    expr <exprVal> (58)
        on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 2 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 42 53 55 66 67 71 72 94 99 104 115
    term <exprVal> (59)
        on left: 32 33 34 35 36 37 38 39
        on right: 31
    assiginexpr <exprVal> (60)
        on left: 42
        on right: 17
    $@2 (61)
        on left: 40
        on right: 42
    $@3 (62)
        on left: 41
        on right: 42
    primary <exprVal> (63)
        on left: 43 44 45 46 47
        on right: 39
    lvalue <exprVal> (64)
        on left: 48 49 50 51
        on right: 35 36 37 38 42 43 52 53 58
    member <exprVal> (65)
        on left: 52 53 54 55
        on right: 51
    call <exprVal> (66)
        on left: 57 58 60
        on right: 44 54 55 57
    $@4 (67)
        on left: 56
        on right: 57
    $@5 (68)
        on left: 59
        on right: 60
    callsuffix (69)
        on left: 61 62
        on right: 58
    normcall (70)
        on left: 64
        on right: 61
    $@6 (71)
        on left: 63
        on right: 64
    methodcall (72)
        on left: 65
        on right: 62
    elist <exprVal> (73)
        on left: 66 67 68
        on right: 57 60 64 65 67 69 104 105
    objectdef <exprVal> (74)
        on left: 69 70
        on right: 45
    indexed <exprVal> (75)
        on left: 71 72
        on right: 70 71
    block <stmt_t> (76)
        on left: 74
        on right: 9 78 82 83
    $@7 (77)
        on left: 73
        on right: 74
    funcdef <exprVal> (78)
        on left: 78 82 83
        on right: 10 46 60
    @8 (79)
        on left: 75
        on right: 78
    $@9 (80)
        on left: 76
        on right: 78
    $@10 (81)
        on left: 77
        on right: 78
    @11 (82)
        on left: 79
        on right: 82
    $@12 (83)
        on left: 80
        on right: 82
    $@13 (84)
        on left: 81
        on right: 82
    const <exprVal> (85)
        on left: 84 85 86 87 88 89
        on right: 47
    idlist <exprVal> (86)
        on left: 90 91 92
        on right: 78 82 83 91
    ifprefix <uns> (87)
        on left: 94
        on right: 96 97
    $@14 (88)
        on left: 93
        on right: 94
    elseprefix <uns> (89)
        on left: 95
        on right: 97
    ifstmt <stmt_t> (90)
        on left: 96 97
        on right: 3
    whilestart <uns> (91)
        on left: 98
        on right: 100
    whilesecond <uns> (92)
        on left: 99
        on right: 100
    while <stmt_t> (93)
        on left: 100
        on right: 4
    N <uns> (94)
        on left: 101
        on right: 105
    M <uns> (95)
        on left: 102
        on right: 104
    forprefix <for_s> (96)
        on left: 104
        on right: 105
    $@15 (97)
        on left: 103
        on right: 104
    for <stmt_t> (98)
        on left: 105
        on right: 5
    loopstart (99)
        on left: 106
        on right: 108
    loopend (100)
        on left: 107
        on right: 108
    loopstmt <stmt_t> (101)
        on left: 108
        on right: 100 105
    funcblockstart (102)
        on left: 109
        on right: 83
    funcblockend (103)
        on left: 110
        on right: 83
    returnstmt <stmt_t> (104)
        on left: 112 115
        on right: 6
    $@16 (105)
        on left: 111
        on right: 112
    $@17 (106)
        on left: 113
        on right: 115
    $@18 (107)
        on left: 114
        on right: 115


State 0

    0 $accept: • program $end

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 16 (stmt_list)

    program      go to state 25
    stmt         go to state 26
    break        go to state 27
    continue     go to state 28
    stmt_list    go to state 29
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 1

   94 ifprefix: IF • $@14 L_PARENTHESIS expr R_PARENTHESIS

    $default  reduce using rule 93 ($@14)

    $@14  go to state 48


State 2

   98 whilestart: WHILE •

    $default  reduce using rule 98 (whilestart)


State 3

  104 forprefix: FOR • $@15 L_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    $default  reduce using rule 103 ($@15)

    $@15  go to state 49


State 4

   78 funcdef: FUNCTION • ID @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 block
   82        | FUNCTION • @11 L_PARENTHESIS $@12 idlist R_PARENTHESIS $@13 block
   83        | FUNCTION • SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend

    SQBRACKETOPEN  shift, and go to state 50
    ID             shift, and go to state 51

    $default  reduce using rule 79 (@11)

    @11  go to state 52


State 5

  112 returnstmt: RETURN • $@16 SEMICOLON
  115           | RETURN • $@17 expr $@18 SEMICOLON

    SEMICOLON  reduce using rule 111 ($@16)
    $default   reduce using rule 113 ($@17)

    $@16  go to state 53
    $@17  go to state 54


State 6

   12 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 55


State 7

   14 continue: CONTINUE • $@1 SEMICOLON

    $default  reduce using rule 13 ($@1)

    $@1  go to state 56


State 8

   34 term: NOT • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 57
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 9

   49 lvalue: LOCAL • ID

    ID  shift, and go to state 58


State 10

   88 const: TRUE •

    $default  reduce using rule 88 (const)


State 11

   89 const: FALSE •

    $default  reduce using rule 89 (const)


State 12

   87 const: NIL •

    $default  reduce using rule 87 (const)


State 13

   74 block: BRACEOPEN • $@7 stmt_list BRACECLOSE

    $default  reduce using rule 73 ($@7)

    $@7  go to state 59


State 14

   69 objectdef: SQBRACKETOPEN • elist SQBRACKETCLOSE
   70          | SQBRACKETOPEN • indexed SQBRACKETCLOSE

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 60
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 62
    objectdef    go to state 37
    indexed      go to state 63
    const        go to state 40


State 15

   32 term: L_PARENTHESIS • expr R_PARENTHESIS
   46 primary: L_PARENTHESIS • funcdef R_PARENTHESIS
   60 call: L_PARENTHESIS • funcdef R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS

    FUNCTION       shift, and go to state 4
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 64
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    funcdef      go to state 65
    const        go to state 40


State 16

   11 stmt: SEMICOLON •

    $default  reduce using rule 11 (stmt)


State 17

   50 lvalue: DOUBLECOLON • ID

    ID  shift, and go to state 66


State 18

   33 term: SUB • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 67
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 19

   35 term: ADDITY • lvalue

    LOCAL          shift, and go to state 9
    L_PARENTHESIS  shift, and go to state 68
    DOUBLECOLON    shift, and go to state 17
    ID             shift, and go to state 21

    lvalue  go to state 69
    member  go to state 35
    call    go to state 70


State 20

   37 term: MULTITY • lvalue

    LOCAL          shift, and go to state 9
    L_PARENTHESIS  shift, and go to state 68
    DOUBLECOLON    shift, and go to state 17
    ID             shift, and go to state 21

    lvalue  go to state 71
    member  go to state 35
    call    go to state 70


State 21

   48 lvalue: ID •

    $default  reduce using rule 48 (lvalue)


State 22

   84 const: INT •

    $default  reduce using rule 84 (const)


State 23

   85 const: REAL •

    $default  reduce using rule 85 (const)


State 24

   86 const: STRING •

    $default  reduce using rule 86 (const)


State 25

    0 $accept: program • $end

    $end  shift, and go to state 72


State 26

   15 stmt_list: stmt • stmt_list

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 16 (stmt_list)

    stmt         go to state 26
    break        go to state 27
    continue     go to state 28
    stmt_list    go to state 73
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 27

    7 stmt: break •

    $default  reduce using rule 7 (stmt)


State 28

    8 stmt: continue •

    $default  reduce using rule 8 (stmt)


State 29

    1 program: stmt_list •

    $default  reduce using rule 1 (program)


State 30

    2 stmt: expr • SEMICOLON
   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    SEMICOLON     shift, and go to state 76
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87


State 31

   31 expr: term •

    $default  reduce using rule 31 (expr)


State 32

   17 expr: assiginexpr •

    $default  reduce using rule 17 (expr)


State 33

   39 term: primary •

    $default  reduce using rule 39 (term)


State 34

   36 term: lvalue • ADDITY
   38     | lvalue • MULTITY
   42 assiginexpr: lvalue • $@2 EQUAL $@3 expr
   43 primary: lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • SQBRACKETOPEN expr SQBRACKETCLOSE
   58 call: lvalue • callsuffix

    SQBRACKETOPEN  shift, and go to state 88
    L_PARENTHESIS  shift, and go to state 89
    DOT            shift, and go to state 90
    DOUBLEDOT      shift, and go to state 91
    ADDITY         shift, and go to state 92
    MULTITY        shift, and go to state 93

    EQUAL     reduce using rule 40 ($@2)
    $default  reduce using rule 43 (primary)

    $@2         go to state 94
    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 35

   51 lvalue: member •

    $default  reduce using rule 51 (lvalue)


State 36

   44 primary: call •
   54 member: call • DOT ID
   55       | call • SQBRACKETOPEN expr SQBRACKETCLOSE
   57 call: call • L_PARENTHESIS $@4 elist R_PARENTHESIS

    SQBRACKETOPEN  shift, and go to state 98
    L_PARENTHESIS  shift, and go to state 99
    DOT            shift, and go to state 100

    $default  reduce using rule 44 (primary)


State 37

   45 primary: objectdef •

    $default  reduce using rule 45 (primary)


State 38

    9 stmt: block •

    $default  reduce using rule 9 (stmt)


State 39

   10 stmt: funcdef •

    $default  reduce using rule 10 (stmt)


State 40

   47 primary: const •

    $default  reduce using rule 47 (primary)


State 41

   96 ifstmt: ifprefix • stmt
   97       | ifprefix • stmt elseprefix stmt

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    stmt         go to state 101
    break        go to state 27
    continue     go to state 28
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 42

    3 stmt: ifstmt •

    $default  reduce using rule 3 (stmt)


State 43

  100 while: whilestart • whilesecond loopstmt

    L_PARENTHESIS  shift, and go to state 102

    whilesecond  go to state 103


State 44

    4 stmt: while •

    $default  reduce using rule 4 (stmt)


State 45

  105 for: forprefix • N elist R_PARENTHESIS N loopstmt N

    $default  reduce using rule 101 (N)

    N  go to state 104


State 46

    5 stmt: for •

    $default  reduce using rule 5 (stmt)


State 47

    6 stmt: returnstmt •

    $default  reduce using rule 6 (stmt)


State 48

   94 ifprefix: IF $@14 • L_PARENTHESIS expr R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 105


State 49

  104 forprefix: FOR $@15 • L_PARENTHESIS elist SEMICOLON M expr SEMICOLON

    L_PARENTHESIS  shift, and go to state 106


State 50

   83 funcdef: FUNCTION SQBRACKETOPEN • ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend

    ID  shift, and go to state 107


State 51

   78 funcdef: FUNCTION ID • @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 block

    $default  reduce using rule 75 (@8)

    @8  go to state 108


State 52

   82 funcdef: FUNCTION @11 • L_PARENTHESIS $@12 idlist R_PARENTHESIS $@13 block

    L_PARENTHESIS  shift, and go to state 109


State 53

  112 returnstmt: RETURN $@16 • SEMICOLON

    SEMICOLON  shift, and go to state 110


State 54

  115 returnstmt: RETURN $@17 • expr $@18 SEMICOLON

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 111
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 55

   12 break: BREAK SEMICOLON •

    $default  reduce using rule 12 (break)


State 56

   14 continue: CONTINUE $@1 • SEMICOLON

    SEMICOLON  shift, and go to state 112


State 57

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   34 term: NOT expr •

    SUB  shift, and go to state 78

    $default  reduce using rule 34 (term)


State 58

   49 lvalue: LOCAL ID •

    $default  reduce using rule 49 (lvalue)


State 59

   74 block: BRACEOPEN $@7 • stmt_list BRACECLOSE

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 16 (stmt_list)

    stmt         go to state 26
    break        go to state 27
    continue     go to state 28
    stmt_list    go to state 113
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 60

   71 indexed: BRACEOPEN • expr COLON expr BRACECLOSE COMMA indexed
   72        | BRACEOPEN • expr COLON expr BRACECLOSE

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 114
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 61

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   66 elist: expr •
   67      | expr • COMMA elist

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    COMMA         shift, and go to state 115
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    $default  reduce using rule 66 (elist)


State 62

   69 objectdef: SQBRACKETOPEN elist • SQBRACKETCLOSE

    SQBRACKETCLOSE  shift, and go to state 116


State 63

   70 objectdef: SQBRACKETOPEN indexed • SQBRACKETCLOSE

    SQBRACKETCLOSE  shift, and go to state 117


State 64

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   32 term: L_PARENTHESIS expr • R_PARENTHESIS

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    R_PARENTHESIS  shift, and go to state 118
    ADD            shift, and go to state 77
    SUB            shift, and go to state 78
    MULT           shift, and go to state 79
    DIVA           shift, and go to state 80
    MOD            shift, and go to state 81
    EQUALITY       shift, and go to state 82
    NOTEQUAL       shift, and go to state 83
    GREATER        shift, and go to state 84
    LESS           shift, and go to state 85
    GREATEREQUAL   shift, and go to state 86
    LESSEQUAL      shift, and go to state 87


State 65

   46 primary: L_PARENTHESIS funcdef • R_PARENTHESIS
   60 call: L_PARENTHESIS funcdef • R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 119


State 66

   50 lvalue: DOUBLECOLON ID •

    $default  reduce using rule 50 (lvalue)


State 67

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   33 term: SUB expr •

    SUB  error (nonassociative)

    $default  reduce using rule 33 (term)


State 68

   60 call: L_PARENTHESIS • funcdef R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS

    FUNCTION  shift, and go to state 4

    funcdef  go to state 120


State 69

   35 term: ADDITY lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • SQBRACKETOPEN expr SQBRACKETCLOSE
   58 call: lvalue • callsuffix

    SQBRACKETOPEN  shift, and go to state 88
    L_PARENTHESIS  shift, and go to state 89
    DOT            shift, and go to state 90
    DOUBLEDOT      shift, and go to state 91

    $default  reduce using rule 35 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 70

   54 member: call • DOT ID
   55       | call • SQBRACKETOPEN expr SQBRACKETCLOSE
   57 call: call • L_PARENTHESIS $@4 elist R_PARENTHESIS

    SQBRACKETOPEN  shift, and go to state 98
    L_PARENTHESIS  shift, and go to state 99
    DOT            shift, and go to state 100


State 71

   37 term: MULTITY lvalue •
   52 member: lvalue • DOT ID
   53       | lvalue • SQBRACKETOPEN expr SQBRACKETCLOSE
   58 call: lvalue • callsuffix

    SQBRACKETOPEN  shift, and go to state 88
    L_PARENTHESIS  shift, and go to state 89
    DOT            shift, and go to state 90
    DOUBLEDOT      shift, and go to state 91

    $default  reduce using rule 37 (term)

    callsuffix  go to state 95
    normcall    go to state 96
    methodcall  go to state 97


State 72

    0 $accept: program $end •

    $default  accept


State 73

   15 stmt_list: stmt stmt_list •

    $default  reduce using rule 15 (stmt_list)


State 74

   29 expr: expr AND • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 121
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 75

   30 expr: expr OR • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 122
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 76

    2 stmt: expr SEMICOLON •

    $default  reduce using rule 2 (stmt)


State 77

   18 expr: expr ADD • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 123
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 78

   19 expr: expr SUB • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 124
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 79

   20 expr: expr MULT • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 125
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 80

   21 expr: expr DIVA • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 126
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 81

   22 expr: expr MOD • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 127
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 82

   27 expr: expr EQUALITY • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 128
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 83

   28 expr: expr NOTEQUAL • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 129
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 84

   23 expr: expr GREATER • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 130
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 85

   25 expr: expr LESS • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 131
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 86

   24 expr: expr GREATEREQUAL • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 132
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 87

   26 expr: expr LESSEQUAL • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 133
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 88

   53 member: lvalue SQBRACKETOPEN • expr SQBRACKETCLOSE

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 134
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 89

   64 normcall: L_PARENTHESIS • $@6 elist R_PARENTHESIS

    $default  reduce using rule 63 ($@6)

    $@6  go to state 135


State 90

   52 member: lvalue DOT • ID

    ID  shift, and go to state 136


State 91

   65 methodcall: DOUBLEDOT • ID L_PARENTHESIS elist R_PARENTHESIS

    ID  shift, and go to state 137


State 92

   36 term: lvalue ADDITY •

    $default  reduce using rule 36 (term)


State 93

   38 term: lvalue MULTITY •

    $default  reduce using rule 38 (term)


State 94

   42 assiginexpr: lvalue $@2 • EQUAL $@3 expr

    EQUAL  shift, and go to state 138


State 95

   58 call: lvalue callsuffix •

    $default  reduce using rule 58 (call)


State 96

   61 callsuffix: normcall •

    $default  reduce using rule 61 (callsuffix)


State 97

   62 callsuffix: methodcall •

    $default  reduce using rule 62 (callsuffix)


State 98

   55 member: call SQBRACKETOPEN • expr SQBRACKETCLOSE

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 139
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 99

   57 call: call L_PARENTHESIS • $@4 elist R_PARENTHESIS

    $default  reduce using rule 56 ($@4)

    $@4  go to state 140


State 100

   54 member: call DOT • ID

    ID  shift, and go to state 141


State 101

   96 ifstmt: ifprefix stmt •
   97       | ifprefix stmt • elseprefix stmt

    ELSE  shift, and go to state 142

    ELSE      [reduce using rule 96 (ifstmt)]
    $default  reduce using rule 96 (ifstmt)

    elseprefix  go to state 143


State 102

   99 whilesecond: L_PARENTHESIS • expr R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 144
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 103

  100 while: whilestart whilesecond • loopstmt

    $default  reduce using rule 106 (loopstart)

    loopstart  go to state 145
    loopstmt   go to state 146


State 104

  105 for: forprefix N • elist R_PARENTHESIS N loopstmt N

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 147
    objectdef    go to state 37
    const        go to state 40


State 105

   94 ifprefix: IF $@14 L_PARENTHESIS • expr R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 148
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 106

  104 forprefix: FOR $@15 L_PARENTHESIS • elist SEMICOLON M expr SEMICOLON

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 149
    objectdef    go to state 37
    const        go to state 40


State 107

   83 funcdef: FUNCTION SQBRACKETOPEN ID • SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend

    SQBRACKETCLOSE  shift, and go to state 150


State 108

   78 funcdef: FUNCTION ID @8 • L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 block

    L_PARENTHESIS  shift, and go to state 151


State 109

   82 funcdef: FUNCTION @11 L_PARENTHESIS • $@12 idlist R_PARENTHESIS $@13 block

    $default  reduce using rule 80 ($@12)

    $@12  go to state 152


State 110

  112 returnstmt: RETURN $@16 SEMICOLON •

    $default  reduce using rule 112 (returnstmt)


State 111

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
  115 returnstmt: RETURN $@17 expr • $@18 SEMICOLON

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    $default  reduce using rule 114 ($@18)

    $@18  go to state 153


State 112

   14 continue: CONTINUE $@1 SEMICOLON •

    $default  reduce using rule 14 (continue)


State 113

   74 block: BRACEOPEN $@7 stmt_list • BRACECLOSE

    BRACECLOSE  shift, and go to state 154


State 114

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   71 indexed: BRACEOPEN expr • COLON expr BRACECLOSE COMMA indexed
   72        | BRACEOPEN expr • COLON expr BRACECLOSE

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    COLON         shift, and go to state 155
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87


State 115

   67 elist: expr COMMA • elist

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 156
    objectdef    go to state 37
    const        go to state 40


State 116

   69 objectdef: SQBRACKETOPEN elist SQBRACKETCLOSE •

    $default  reduce using rule 69 (objectdef)


State 117

   70 objectdef: SQBRACKETOPEN indexed SQBRACKETCLOSE •

    $default  reduce using rule 70 (objectdef)


State 118

   32 term: L_PARENTHESIS expr R_PARENTHESIS •

    $default  reduce using rule 32 (term)


State 119

   46 primary: L_PARENTHESIS funcdef R_PARENTHESIS •
   60 call: L_PARENTHESIS funcdef R_PARENTHESIS • L_PARENTHESIS $@5 elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 157

    $default  reduce using rule 46 (primary)


State 120

   60 call: L_PARENTHESIS funcdef • R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 158


State 121

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   29     | expr AND expr •
   30     | expr • OR expr

    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    $default  reduce using rule 29 (expr)


State 122

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   30     | expr OR expr •

    AND           shift, and go to state 74
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    $default  reduce using rule 30 (expr)


State 123

   18 expr: expr • ADD expr
   18     | expr ADD expr •
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    SUB   shift, and go to state 78
    MULT  shift, and go to state 79
    DIVA  shift, and go to state 80
    MOD   shift, and go to state 81

    $default  reduce using rule 18 (expr)


State 124

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   19     | expr SUB expr •
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    SUB  error (nonassociative)

    $default  reduce using rule 19 (expr)


State 125

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   20     | expr MULT expr •
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    SUB  shift, and go to state 78

    $default  reduce using rule 20 (expr)


State 126

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   21     | expr DIVA expr •
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    SUB  shift, and go to state 78

    $default  reduce using rule 21 (expr)


State 127

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   22     | expr MOD expr •
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    SUB  shift, and go to state 78

    $default  reduce using rule 22 (expr)


State 128

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   27     | expr EQUALITY expr •
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    EQUALITY  error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 129

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   28     | expr NOTEQUAL expr •
   29     | expr • AND expr
   30     | expr • OR expr

    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    EQUALITY  error (nonassociative)
    NOTEQUAL  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 130

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   23     | expr GREATER expr •
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    MULT  shift, and go to state 79
    DIVA  shift, and go to state 80
    MOD   shift, and go to state 81

    GREATER       error (nonassociative)
    LESS          error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)

    $default  reduce using rule 23 (expr)


State 131

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   25     | expr LESS expr •
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    MULT  shift, and go to state 79
    DIVA  shift, and go to state 80
    MOD   shift, and go to state 81

    GREATER       error (nonassociative)
    LESS          error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)

    $default  reduce using rule 25 (expr)


State 132

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   24     | expr GREATEREQUAL expr •
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    MULT  shift, and go to state 79
    DIVA  shift, and go to state 80
    MOD   shift, and go to state 81

    GREATER       error (nonassociative)
    LESS          error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)

    $default  reduce using rule 24 (expr)


State 133

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   26     | expr LESSEQUAL expr •
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr

    ADD   shift, and go to state 77
    SUB   shift, and go to state 78
    MULT  shift, and go to state 79
    DIVA  shift, and go to state 80
    MOD   shift, and go to state 81

    GREATER       error (nonassociative)
    LESS          error (nonassociative)
    GREATEREQUAL  error (nonassociative)
    LESSEQUAL     error (nonassociative)

    $default  reduce using rule 26 (expr)


State 134

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   53 member: lvalue SQBRACKETOPEN expr • SQBRACKETCLOSE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    SQBRACKETCLOSE  shift, and go to state 159
    ADD             shift, and go to state 77
    SUB             shift, and go to state 78
    MULT            shift, and go to state 79
    DIVA            shift, and go to state 80
    MOD             shift, and go to state 81
    EQUALITY        shift, and go to state 82
    NOTEQUAL        shift, and go to state 83
    GREATER         shift, and go to state 84
    LESS            shift, and go to state 85
    GREATEREQUAL    shift, and go to state 86
    LESSEQUAL       shift, and go to state 87


State 135

   64 normcall: L_PARENTHESIS $@6 • elist R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 160
    objectdef    go to state 37
    const        go to state 40


State 136

   52 member: lvalue DOT ID •

    $default  reduce using rule 52 (member)


State 137

   65 methodcall: DOUBLEDOT ID • L_PARENTHESIS elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 161


State 138

   42 assiginexpr: lvalue $@2 EQUAL • $@3 expr

    $default  reduce using rule 41 ($@3)

    $@3  go to state 162


State 139

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   55 member: call SQBRACKETOPEN expr • SQBRACKETCLOSE

    AND             shift, and go to state 74
    OR              shift, and go to state 75
    SQBRACKETCLOSE  shift, and go to state 163
    ADD             shift, and go to state 77
    SUB             shift, and go to state 78
    MULT            shift, and go to state 79
    DIVA            shift, and go to state 80
    MOD             shift, and go to state 81
    EQUALITY        shift, and go to state 82
    NOTEQUAL        shift, and go to state 83
    GREATER         shift, and go to state 84
    LESS            shift, and go to state 85
    GREATEREQUAL    shift, and go to state 86
    LESSEQUAL       shift, and go to state 87


State 140

   57 call: call L_PARENTHESIS $@4 • elist R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 164
    objectdef    go to state 37
    const        go to state 40


State 141

   54 member: call DOT ID •

    $default  reduce using rule 54 (member)


State 142

   95 elseprefix: ELSE •

    $default  reduce using rule 95 (elseprefix)


State 143

   97 ifstmt: ifprefix stmt elseprefix • stmt

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    stmt         go to state 165
    break        go to state 27
    continue     go to state 28
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 144

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   99 whilesecond: L_PARENTHESIS expr • R_PARENTHESIS

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    R_PARENTHESIS  shift, and go to state 166
    ADD            shift, and go to state 77
    SUB            shift, and go to state 78
    MULT           shift, and go to state 79
    DIVA           shift, and go to state 80
    MOD            shift, and go to state 81
    EQUALITY       shift, and go to state 82
    NOTEQUAL       shift, and go to state 83
    GREATER        shift, and go to state 84
    LESS           shift, and go to state 85
    GREATEREQUAL   shift, and go to state 86
    LESSEQUAL      shift, and go to state 87


State 145

  108 loopstmt: loopstart • stmt loopend

    IF             shift, and go to state 1
    WHILE          shift, and go to state 2
    FOR            shift, and go to state 3
    FUNCTION       shift, and go to state 4
    RETURN         shift, and go to state 5
    BREAK          shift, and go to state 6
    CONTINUE       shift, and go to state 7
    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    BRACEOPEN      shift, and go to state 13
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    SEMICOLON      shift, and go to state 16
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    stmt         go to state 167
    break        go to state 27
    continue     go to state 28
    expr         go to state 30
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    block        go to state 38
    funcdef      go to state 39
    const        go to state 40
    ifprefix     go to state 41
    ifstmt       go to state 42
    whilestart   go to state 43
    while        go to state 44
    forprefix    go to state 45
    for          go to state 46
    returnstmt   go to state 47


State 146

  100 while: whilestart whilesecond loopstmt •

    $default  reduce using rule 100 (while)


State 147

  105 for: forprefix N elist • R_PARENTHESIS N loopstmt N

    R_PARENTHESIS  shift, and go to state 168


State 148

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   94 ifprefix: IF $@14 L_PARENTHESIS expr • R_PARENTHESIS

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    R_PARENTHESIS  shift, and go to state 169
    ADD            shift, and go to state 77
    SUB            shift, and go to state 78
    MULT           shift, and go to state 79
    DIVA           shift, and go to state 80
    MOD            shift, and go to state 81
    EQUALITY       shift, and go to state 82
    NOTEQUAL       shift, and go to state 83
    GREATER        shift, and go to state 84
    LESS           shift, and go to state 85
    GREATEREQUAL   shift, and go to state 86
    LESSEQUAL      shift, and go to state 87


State 149

  104 forprefix: FOR $@15 L_PARENTHESIS elist • SEMICOLON M expr SEMICOLON

    SEMICOLON  shift, and go to state 170


State 150

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE • L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend

    L_PARENTHESIS  shift, and go to state 171


State 151

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS • $@9 idlist R_PARENTHESIS $@10 block

    $default  reduce using rule 76 ($@9)

    $@9  go to state 172


State 152

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 • idlist R_PARENTHESIS $@13 block

    ID  shift, and go to state 173

    $default  reduce using rule 92 (idlist)

    idlist  go to state 174


State 153

  115 returnstmt: RETURN $@17 expr $@18 • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 154

   74 block: BRACEOPEN $@7 stmt_list BRACECLOSE •

    $default  reduce using rule 74 (block)


State 155

   71 indexed: BRACEOPEN expr COLON • expr BRACECLOSE COMMA indexed
   72        | BRACEOPEN expr COLON • expr BRACECLOSE

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 176
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 156

   67 elist: expr COMMA elist •

    $default  reduce using rule 67 (elist)


State 157

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS • $@5 elist R_PARENTHESIS

    $default  reduce using rule 59 ($@5)

    $@5  go to state 177


State 158

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS • L_PARENTHESIS $@5 elist R_PARENTHESIS

    L_PARENTHESIS  shift, and go to state 157


State 159

   53 member: lvalue SQBRACKETOPEN expr SQBRACKETCLOSE •

    $default  reduce using rule 53 (member)


State 160

   64 normcall: L_PARENTHESIS $@6 elist • R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 178


State 161

   65 methodcall: DOUBLEDOT ID L_PARENTHESIS • elist R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 179
    objectdef    go to state 37
    const        go to state 40


State 162

   42 assiginexpr: lvalue $@2 EQUAL $@3 • expr

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 180
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 163

   55 member: call SQBRACKETOPEN expr SQBRACKETCLOSE •

    $default  reduce using rule 55 (member)


State 164

   57 call: call L_PARENTHESIS $@4 elist • R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 181


State 165

   97 ifstmt: ifprefix stmt elseprefix stmt •

    $default  reduce using rule 97 (ifstmt)


State 166

   99 whilesecond: L_PARENTHESIS expr R_PARENTHESIS •

    $default  reduce using rule 99 (whilesecond)


State 167

  108 loopstmt: loopstart stmt • loopend

    $default  reduce using rule 107 (loopend)

    loopend  go to state 182


State 168

  105 for: forprefix N elist R_PARENTHESIS • N loopstmt N

    $default  reduce using rule 101 (N)

    N  go to state 183


State 169

   94 ifprefix: IF $@14 L_PARENTHESIS expr R_PARENTHESIS •

    $default  reduce using rule 94 (ifprefix)


State 170

  104 forprefix: FOR $@15 L_PARENTHESIS elist SEMICOLON • M expr SEMICOLON

    $default  reduce using rule 102 (M)

    M  go to state 184


State 171

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS • idlist R_PARENTHESIS funcblockstart block funcblockend

    ID  shift, and go to state 173

    $default  reduce using rule 92 (idlist)

    idlist  go to state 185


State 172

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 • idlist R_PARENTHESIS $@10 block

    ID  shift, and go to state 173

    $default  reduce using rule 92 (idlist)

    idlist  go to state 186


State 173

   90 idlist: ID •

    $default  reduce using rule 90 (idlist)


State 174

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 idlist • R_PARENTHESIS $@13 block
   91 idlist: idlist • COMMA ID

    R_PARENTHESIS  shift, and go to state 187
    COMMA          shift, and go to state 188


State 175

  115 returnstmt: RETURN $@17 expr $@18 SEMICOLON •

    $default  reduce using rule 115 (returnstmt)


State 176

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   71 indexed: BRACEOPEN expr COLON expr • BRACECLOSE COMMA indexed
   72        | BRACEOPEN expr COLON expr • BRACECLOSE

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    BRACECLOSE    shift, and go to state 189
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87


State 177

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS $@5 • elist R_PARENTHESIS

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    $default  reduce using rule 68 (elist)

    expr         go to state 61
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    elist        go to state 190
    objectdef    go to state 37
    const        go to state 40


State 178

   64 normcall: L_PARENTHESIS $@6 elist R_PARENTHESIS •

    $default  reduce using rule 64 (normcall)


State 179

   65 methodcall: DOUBLEDOT ID L_PARENTHESIS elist • R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 191


State 180

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
   42 assiginexpr: lvalue $@2 EQUAL $@3 expr •

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87

    $default  reduce using rule 42 (assiginexpr)


State 181

   57 call: call L_PARENTHESIS $@4 elist R_PARENTHESIS •

    $default  reduce using rule 57 (call)


State 182

  108 loopstmt: loopstart stmt loopend •

    $default  reduce using rule 108 (loopstmt)


State 183

  105 for: forprefix N elist R_PARENTHESIS N • loopstmt N

    $default  reduce using rule 106 (loopstart)

    loopstart  go to state 145
    loopstmt   go to state 192


State 184

  104 forprefix: FOR $@15 L_PARENTHESIS elist SEMICOLON M • expr SEMICOLON

    NOT            shift, and go to state 8
    LOCAL          shift, and go to state 9
    TRUE           shift, and go to state 10
    FALSE          shift, and go to state 11
    NIL            shift, and go to state 12
    SQBRACKETOPEN  shift, and go to state 14
    L_PARENTHESIS  shift, and go to state 15
    DOUBLECOLON    shift, and go to state 17
    SUB            shift, and go to state 18
    ADDITY         shift, and go to state 19
    MULTITY        shift, and go to state 20
    ID             shift, and go to state 21
    INT            shift, and go to state 22
    REAL           shift, and go to state 23
    STRING         shift, and go to state 24

    expr         go to state 193
    term         go to state 31
    assiginexpr  go to state 32
    primary      go to state 33
    lvalue       go to state 34
    member       go to state 35
    call         go to state 36
    objectdef    go to state 37
    const        go to state 40


State 185

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist • R_PARENTHESIS funcblockstart block funcblockend
   91 idlist: idlist • COMMA ID

    R_PARENTHESIS  shift, and go to state 194
    COMMA          shift, and go to state 188


State 186

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 idlist • R_PARENTHESIS $@10 block
   91 idlist: idlist • COMMA ID

    R_PARENTHESIS  shift, and go to state 195
    COMMA          shift, and go to state 188


State 187

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 idlist R_PARENTHESIS • $@13 block

    $default  reduce using rule 81 ($@13)

    $@13  go to state 196


State 188

   91 idlist: idlist COMMA • ID

    ID  shift, and go to state 197


State 189

   71 indexed: BRACEOPEN expr COLON expr BRACECLOSE • COMMA indexed
   72        | BRACEOPEN expr COLON expr BRACECLOSE •

    COMMA  shift, and go to state 198

    $default  reduce using rule 72 (indexed)


State 190

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS $@5 elist • R_PARENTHESIS

    R_PARENTHESIS  shift, and go to state 199


State 191

   65 methodcall: DOUBLEDOT ID L_PARENTHESIS elist R_PARENTHESIS •

    $default  reduce using rule 65 (methodcall)


State 192

  105 for: forprefix N elist R_PARENTHESIS N loopstmt • N

    $default  reduce using rule 101 (N)

    N  go to state 200


State 193

   18 expr: expr • ADD expr
   19     | expr • SUB expr
   20     | expr • MULT expr
   21     | expr • DIVA expr
   22     | expr • MOD expr
   23     | expr • GREATER expr
   24     | expr • GREATEREQUAL expr
   25     | expr • LESS expr
   26     | expr • LESSEQUAL expr
   27     | expr • EQUALITY expr
   28     | expr • NOTEQUAL expr
   29     | expr • AND expr
   30     | expr • OR expr
  104 forprefix: FOR $@15 L_PARENTHESIS elist SEMICOLON M expr • SEMICOLON

    AND           shift, and go to state 74
    OR            shift, and go to state 75
    SEMICOLON     shift, and go to state 201
    ADD           shift, and go to state 77
    SUB           shift, and go to state 78
    MULT          shift, and go to state 79
    DIVA          shift, and go to state 80
    MOD           shift, and go to state 81
    EQUALITY      shift, and go to state 82
    NOTEQUAL      shift, and go to state 83
    GREATER       shift, and go to state 84
    LESS          shift, and go to state 85
    GREATEREQUAL  shift, and go to state 86
    LESSEQUAL     shift, and go to state 87


State 194

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS • funcblockstart block funcblockend

    $default  reduce using rule 109 (funcblockstart)

    funcblockstart  go to state 202


State 195

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS • $@10 block

    $default  reduce using rule 77 ($@10)

    $@10  go to state 203


State 196

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 idlist R_PARENTHESIS $@13 • block

    BRACEOPEN  shift, and go to state 13

    block  go to state 204


State 197

   91 idlist: idlist COMMA ID •

    $default  reduce using rule 91 (idlist)


State 198

   71 indexed: BRACEOPEN expr COLON expr BRACECLOSE COMMA • indexed

    BRACEOPEN  shift, and go to state 60

    indexed  go to state 205


State 199

   60 call: L_PARENTHESIS funcdef R_PARENTHESIS L_PARENTHESIS $@5 elist R_PARENTHESIS •

    $default  reduce using rule 60 (call)


State 200

  105 for: forprefix N elist R_PARENTHESIS N loopstmt N •

    $default  reduce using rule 105 (for)


State 201

  104 forprefix: FOR $@15 L_PARENTHESIS elist SEMICOLON M expr SEMICOLON •

    $default  reduce using rule 104 (forprefix)


State 202

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart • block funcblockend

    BRACEOPEN  shift, and go to state 13

    block  go to state 206


State 203

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 • block

    BRACEOPEN  shift, and go to state 13

    block  go to state 207


State 204

   82 funcdef: FUNCTION @11 L_PARENTHESIS $@12 idlist R_PARENTHESIS $@13 block •

    $default  reduce using rule 82 (funcdef)


State 205

   71 indexed: BRACEOPEN expr COLON expr BRACECLOSE COMMA indexed •

    $default  reduce using rule 71 (indexed)


State 206

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block • funcblockend

    $default  reduce using rule 110 (funcblockend)

    funcblockend  go to state 208


State 207

   78 funcdef: FUNCTION ID @8 L_PARENTHESIS $@9 idlist R_PARENTHESIS $@10 block •

    $default  reduce using rule 78 (funcdef)


State 208

   83 funcdef: FUNCTION SQBRACKETOPEN ID SQBRACKETCLOSE L_PARENTHESIS idlist R_PARENTHESIS funcblockstart block funcblockend •

    $default  reduce using rule 83 (funcdef)
